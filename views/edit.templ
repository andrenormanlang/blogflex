package views

import (
	"blogflex/internal/models"
	"fmt"
)

templ EditPost(post models.Post) {
	<!DOCTYPE html>
	<html>
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Edit Post - BlogFlex</title>
			<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet"/>
			<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet"/>
			<!-- Place the first <script> tag in your HTML's <head> -->
			<!-- Place the first <script> tag in your HTML's <head> -->
			<!-- Place the first <script> tag in your HTML's <head> -->
			<script src="https://cdn.tiny.cloud/1/3ptuccpjxd9qd48kti566c6geohm1x5u2jhrl4szbz9l14ee/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
			<!-- Place the following <script> and <textarea> tags your HTML's <body> -->
			<script>
  tinymce.init({
    selector: 'textarea',
    plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount',
    toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat',
  });
</script>
			<style>
        body {
          font-family: 'Inter', sans-serif;
          background-color: #121212;
          color: #e0e0e0;
        }
        .container {
          max-width: 1200px;
        }
        .card {
          background-color: #1e1e1e;
          border: none;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
          border-radius: 10px;
        }
        .card-body {
          padding: 20px;
        }
        .card-title {
          color: #bb86fc;
        }
        .form-control {
          background-color: #2c2c2c;
          border: none;
          color: #e0e0e0;
        }
        .form-control:focus {
          background-color: #2c2c2c;
          color: #e0e0e0;
        }
        .btn-primary {
          background-color: #bb86fc;
          border: none;
        }
        .btn-primary:hover {
          background-color: #3700b3;
        }
      </style>
		</head>
		<body>
			<div class="container mt-5">
				<div class="row justify-content-center">
					<div class="col-md-12">
						<div class="card shadow-sm">
							<div class="card-body">
								// <h1 class="card-title text-center mb-4">Edit Post</h1>
								<form id="edit-post-form" hx-post={ fmt.Sprintf("/protected/posts/%d/edit", post.ID) } hx-redirect="true" hx-target="#response-message" hx-swap="innerHTML" method="POST">
									<div class="form-group">
										<label for="title">Title</label>
										<textarea id="title" name="title" rows="2" class="form-control" required>{ post.Title }</textarea>
									</div>
									<div class="form-group">
										<label for="content">Content</label>
										<textarea id="content" name="content" rows="10" class="form-control" required>{ post.Content }</textarea>
									</div>
									<div class="text-center">
										<button type="submit" class="btn btn-primary">Update Post</button>
									</div>
								</form>
								<div id="response-message" class="mt-4"></div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<script>
        document.addEventListener("DOMContentLoaded", function() {
          tinymce.init({
            selector: '#title, #content',
            plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
              { value: 'First.Name', title: 'First Name' },
              { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
            setup: function(editor) {
              editor.on('change', function(e) {
                editor.save();
              });
            },
            skin: window.matchMedia("(prefers-color-scheme: dark)").matches ? "oxide-dark" : "",
            content_css: window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : ""
          });

          document.getElementById('edit-post-form').addEventListener('submit', function(e) {
            e.preventDefault(); // Prevent default form submission
            
            // Get content from TinyMCE editors
            const titleContent = tinymce.get('title').getContent();
            const contentContent = tinymce.get('content').getContent();
            
            // Validate content
            if (titleContent === '' || contentContent === '') {
              alert('Both Title and Content are required.');
              return;
            }
            
            // Update form fields with TinyMCE content
            document.getElementById('title').value = titleContent;
            document.getElementById('content').value = contentContent;
            
            // Get form data
            const form = this;
            const formData = new FormData(form);
            
            // Send AJAX request
            fetch(form.getAttribute('hx-post'), {
              method: 'POST',
              body: formData,
              headers: {
                'Accept': 'application/json',
              }
            })
            .then(response => {
              if (response.ok) {
                // Get the redirect URL from the header
                const redirectUrl = response.headers.get('HX-Redirect');
                if (redirectUrl) {
                  window.location.href = redirectUrl;
                } else {
                  return response.text().then(text => {
                    document.getElementById('response-message').innerHTML = text || 'Post updated successfully!';
                  });
                }
              } else {
                return response.text().then(text => {
                  document.getElementById('response-message').innerHTML = text || 'Failed to update post.';
                });
              }
            })
            .catch(error => {
              console.error('Error:', error);
              document.getElementById('response-message').innerHTML = 'An error occurred while updating the post.';
            });
          });
        });
      </script>
			<script src="https://unpkg.com/htmx.org@2.0.0/dist/htmx.min.js"></script>
		</body>
	</html>
}
